C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE ROCKER
OBJECT MODULE PLACED IN rocker.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe rocker.c DB OE LARGE OT(7,SPEED)

line level    source

   1          
   2          //;***************************************************************************
   3          //;
   4          //;        Copyright 2007 Avago Technologies Limited
   5          //;    This code is provided by Avago Technologies as a reference.
   6          //;     Avago Technologies makes no claims or warranties
   7          //;    to this firmware's suitability for any application.
   8          //;    All rights reserved. Patent Pending. 
   9          //;
  10          //;*************************************************************************** 
  11          
  12          #include <c8051f3xx.h>
  13          #include <rocker.h>
  14          #include <timer.h>
  15          #include <stdlib.h>
  16          
  17          #define SHUTTER_TIME1   100
  18          #define SHUTTER_TIME2   100
  19          #define CLICK_TIME              100
  20          #define CLICK_STABLE    10
  21          #define CLICK_DELAY             190
  22          #define SHUTTER_J               9
  23          #define SHUTTER_STABLE  10
  24          #define SHUTTER_DIFF    2
  25          
  26          #define FINGER_MODE             0 //
  27          
  28          #define UP_KEY                  0x52
  29          #define DOWN_KEY                0x51
  30          #define RIGHT_KEY               0x4F
  31          #define LEFT_KEY                0x50
  32          
  33          
  34          typedef union
  35          {
  36                  unsigned int w;
  37                  unsigned char b[2];
  38          }
  39          union16;
  40          
  41          
  42          // state
  43          unsigned char left_state, right_state, click_state, calibrate_state;
  44          
  45          bit toggle_flag;
  46          signed int X_Total_Displacement, Y_Total_Displacement; 
  47          extern signed int X_Total_Displacement_main, Y_Total_Displacement_main; 
  48          unsigned char multiply_num;
  49          
  50          // toggle step
  51          unsigned int shutter_motion1, shutter_motion2;
  52          
  53          // shutter calibration
  54          unsigned int shutter_c, shutter_p, shutter_d, ratio_s;
  55          unsigned int shutter_set1, shutter_set2;
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 2   

  56          unsigned int shutter_mul1, shutter_mul2, shutter_basic;
  57          unsigned int SHUTTER_UPPER_TRES, SHUTTER_LOWER_TRES;
  58          bit threshold_flag;
  59          
  60          // speed switching
  61          extern signed char count_x0, count_x1, count_x2, count_x3, count_x4;    
  62          extern signed char count_y0, count_y1, count_y2, count_y3, count_y4;
  63          
  64          extern signed char sign_count_x0, sign_count_x1, sign_count_x2, sign_count_x3, sign_count_x4;   
  65          extern signed char sign_count_y0, sign_count_y1, sign_count_y2, sign_count_y3, sign_count_y4;
  66          
  67          extern union16 shutter0, shutter1, shutter6;
  68          extern signed char count_x, count_y, count_z;
  69          extern unsigned char motion; /* delta_x, delta_y;*/
  70          extern int delta_x, delta_y;  //CWLint
  71          // flag / temp
  72          unsigned char click_flag;
  73          bit rc_flag, sc_flag;
  74          
  75          
  76          // mode
  77          extern unsigned char free_scroll, ofn_mode;
  78          
  79          extern unsigned char buttons;
  80          
  81          signed char sign_of ( signed char input);
  82          void buffer_clear(void);
  83          //------------------------------------------------------------------------------------
  84          // Shutter Calibration
  85          //------------------------------------------------------------------------------------
  86          // % = 1/value ====> value = 1/%
  87          // (abs(shutter_c - shutter_p)/shutter) > (1/value) 
  88          // abs(shutter_c - shutter_p) > (shutter/value) 
  89          // shutter_d > ratio_s
  90          
  91          
  92          //------------------------------------------------------------------------------------
  93          // NOKIA PARAMETERS
  94          //------------------------------------------------------------------------------------
  95          
  96          //int rocker_speed = 1;                 //use 1(default) - 10
  97          int polling_period = 50;                //default: 50ms. The lower the value the more steps generated per swipe.
  98          //unsigned char key_step2 = 0;
  99          int step_threshold = 20;                //set the threshold below which no motion will be reported
 100          
 101          
 102          //X and Y Thresholds for Multiple Step rocker - 8 way rocker config
 103          int Y_up_M_Step_Thresh = 13;
 104          int Y_down_M_Step_Thresh =  -13;
 105          int X_right_M_Step_Thresh = 13;
 106          int X_left_M_Step_Thresh =  -13;
 107          
 108          //X and Y Thresholds for Single Step rocker - 8 way rocker config
 109          int Y_up_S_Step_Thresh = 13;
 110          int Y_down_S_Step_Thresh =  -13;
 111          int X_right_S_Step_Thresh = 13;
 112          int X_left_S_Step_Thresh =  -13;
 113          
 114          //8 way rocker activation -     1=ON, 0=OFF
 115          int eight_way = 0;
 116          
 117          #ifdef SHUTTER_CALIBRATE
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 3   

 118          void Shutter_Calibration(void)
 119          {
 120   1              switch(calibrate_state)
 121   1              {
 122   2                      case 0:
 123   2                              if(threshold_flag == 0)
 124   2                              {
 125   3                                      shutter_c = shutter1.w;
 126   3                                      shutter_p = shutter1.w;
 127   3                                      calibrate_state = 10;
 128   3                              }
 129   2                              break;
 130   2                      case 10:
 131   2                              shutter_p = shutter_c;
 132   2                              shutter_c = shutter1.w;
 133   2                      
 134   2                              shutter_d = abs(shutter_c - shutter_p);
 135   2                              if(shutter_c > shutter_p)
 136   2                              {
 137   3                                      ratio_s = shutter_c / SHUTTER_STABLE;
 138   3                              }
 139   2                              else
 140   2                              {
 141   3                                      ratio_s = shutter_p / SHUTTER_STABLE;
 142   3                              }
 143   2                              
 144   2                              if(shutter_d < ratio_s)
 145   2                              {
 146   3                                      t_calibrate_data = SHUTTER_TIME1;
 147   3                                      time_calibrate = 1;
 148   3                                      calibrate_state = 20;
 149   3                              }       
 150   2                              break;
 151   2      
 152   2                      case 20:
 153   2                              if(shutter_c != shutter1.w)
 154   2                              {
 155   3                                      shutter_p = shutter_c;
 156   3                                      shutter_c = shutter1.w;
 157   3                              
 158   3                                      shutter_d = abs(shutter_c - shutter_p);
 159   3                                      if(shutter_c > shutter_p)
 160   3                                      {
 161   4                                              ratio_s = shutter_c / SHUTTER_STABLE;
 162   4                                      }
 163   3                                      else
 164   3                                      {
 165   4                                              ratio_s = shutter_p / SHUTTER_STABLE;
 166   4                                      }       
 167   3                              }
 168   2      
 169   2                              if(time_calibrate == 0)
 170   2                              {
 171   3                                      shutter_set1 = (shutter_p + shutter_c) / 2;
 172   3                                      //pix_min_set1 = pix_min;
 173   3                                      calibrate_state = 30;
 174   3                              }
 175   2                              else if(shutter_d > ratio_s) 
 176   2                              {
 177   3                                      calibrate_state = 10;
 178   3                              }
 179   2                              break;
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 4   

 180   2      
 181   2                      case 30:
 182   2                              shutter_p = shutter_c;
 183   2                              shutter_c = shutter1.w;
 184   2                      
 185   2                              shutter_d = abs(shutter_c - shutter_set1);
 186   2                              if(shutter_c > shutter_set1)
 187   2                              {
 188   3                                      ratio_s = shutter_c / SHUTTER_DIFF;
 189   3                              }
 190   2                              else
 191   2                              {
 192   3                                      ratio_s = shutter_set1 / SHUTTER_DIFF;
 193   3                              }
 194   2                              
 195   2                              if(shutter_d > ratio_s)
 196   2                              {
 197   3                                      calibrate_state = 40;
 198   3                              }       
 199   2                              break;
 200   2      
 201   2                      case 40:
 202   2                              shutter_p = shutter_c;
 203   2                              shutter_c = shutter1.w;
 204   2                      
 205   2                              shutter_d = abs(shutter_c - shutter_p);
 206   2                              if(shutter_c > shutter_p)
 207   2                              {
 208   3                                      ratio_s = shutter_c / SHUTTER_STABLE;
 209   3                              }
 210   2                              else
 211   2                              {
 212   3                                      ratio_s = shutter_p / SHUTTER_STABLE;
 213   3                              }
 214   2                              
 215   2                              if(shutter_d < ratio_s)
 216   2                              {
 217   3                                      t_calibrate_data = SHUTTER_TIME2;
 218   3                                      time_calibrate = 1;
 219   3                                      calibrate_state = 50;
 220   3                              }       
 221   2                              break;
 222   2      
 223   2                      case 50:
 224   2                              if(shutter_c != shutter1.w)
 225   2                              {
 226   3                                      shutter_p = shutter_c;
 227   3                                      shutter_c = shutter1.w;
 228   3                              
 229   3                                      shutter_d = abs(shutter_c - shutter_p);
 230   3                                      if(shutter_c > shutter_p)
 231   3                                      {
 232   4                                              ratio_s = shutter_c / SHUTTER_STABLE;
 233   4                                      }
 234   3                                      else
 235   3                                      {
 236   4                                              ratio_s = shutter_p / SHUTTER_STABLE;
 237   4                                      }       
 238   3                              }
 239   2                              
 240   2                              if(time_calibrate == 0)
 241   2                              {
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 5   

 242   3                                      shutter_set2 = (shutter_p + shutter_c) / 2; 
 243   3                                      //pix_min_set2 = pix_min;
 244   3                                      calibrate_state = 60;   
 245   3                              }
 246   2                              else if(shutter_d > ratio_s) 
 247   2                              {
 248   3                                      calibrate_state = 30;   
 249   3                              }
 250   2                              break;
 251   2      
 252   2                      case 60:
 253   2                              shutter_d = abs(shutter_set1 - shutter_set2);
 254   2                              if(shutter_set1 > shutter_set2)
 255   2                              {
 256   3                                      ratio_s = shutter_set1 / SHUTTER_DIFF;
 257   3                              }
 258   2                              else
 259   2                              {
 260   3                                      ratio_s = shutter_set2 / SHUTTER_DIFF;
 261   3                              }
 262   2      
 263   2                              if(shutter_d > ratio_s) 
 264   2                              {
 265   3                                      calibrate_state = 100;
 266   3                              }
 267   2                              else
 268   2                              {
 269   3                                      calibrate_state = 30;
 270   3                              }
 271   2                              break;
 272   2      
 273   2                      case 100:
 274   2                              shutter_d = abs(shutter_set1 - shutter_set2);
 275   2      
 276   2                              if(shutter_set1 > shutter_set2)
 277   2                              {
 278   3                                      shutter_basic = shutter_set2;                   
 279   3                              }
 280   2                              else
 281   2                              {
 282   3                                      shutter_basic = shutter_set1;
 283   3                              }
 284   2      
 285   2                              if(shutter_d < 300)
 286   2                              {
 287   3                                      shutter_mul1 = 2;
 288   3                                      shutter_mul2 = 5;
 289   3                              }
 290   2                              else if(shutter_d < 500)
 291   2                              {
 292   3                                      shutter_mul1 = 2;
 293   3                                      shutter_mul2 = 5;
 294   3                              }
 295   2                              else
 296   2                              {
 297   3                                      shutter_mul1 = 2;       
 298   3                                      shutter_mul2 = 5;       
 299   3                              }                               
 300   2                              
 301   2                              SHUTTER_LOWER_TRES = shutter_basic + ((shutter_d * shutter_mul1) / 10);
 302   2                              SHUTTER_UPPER_TRES = shutter_basic + ((shutter_d * shutter_mul2) / 10);
 303   2                              shutter_motion1 = SHUTTER_LOWER_TRES;
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 6   

 304   2                              shutter_motion2 = SHUTTER_UPPER_TRES;
 305   2                              threshold_flag = 1;
 306   2                              calibrate_state = 0;
 307   2                              break;
 308   2      
 309   2                      default:
 310   2                              break;
 311   2              }
 312   1      
 313   1      }
 314          #endif
 315          
 316          
 317          //------------------------------------------------------------------------------------
 318          // Left click detection
 319          //------------------------------------------------------------------------------------
 320          
 321          #ifdef TAPPING
 322          void Tap_Detection(void)
 323          {       
 324   1              if(((abs(count_x) + abs(count_y)) > 10) || (sc_flag == 1))
 325   1              {
 326   2                      sc_flag = 0;
 327   2                      left_state = 0;
 328   2              }
 329   1      
 330   1              switch(left_state)
 331   1              {
 332   2                      case 0:
 333   2                              if(threshold_flag == 1)
 334   2                              {
 335   3                                      left_state = 5; 
 336   3                              }
 337   2                              break;
 338   2                      case 5:
 339   2                              //if(shutter0.w > SHUTTER_UPPER_TRES)
 340   2                              if (L7 == 1)
 341   2                              {
 342   3                                      left_state = 10;     
 343   3                              }
 344   2                              break;
 345   2                      case 10:
 346   2                              //if(shutter0.w < SHUTTER_LOWER_TRES)
 347   2                              if (L7 == 0)
 348   2                              { 
 349   3                              //      free_scroll = 0; 
 350   3                                      count_z = 0;  
 351   3                                      t_left_data = CLICK_STABLE;     
 352   3                                      time_left = 1;   
 353   3                                      left_state = 15;      
 354   3                              }
 355   2                              break;
 356   2                      case 15:
 357   2                              if (L7 == 1)
 358   2                              //if(shutter0.w > SHUTTER_UPPER_TRES)
 359   2                              {
 360   3                                      left_state = 0;
 361   3                              }
 362   2                              else if(time_left == 0)
 363   2                              {
 364   3                                      t_left_data = CLICK_DELAY;
 365   3                                      time_left = 1;
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 7   

 366   3                                      left_state = 20;
 367   3                              }
 368   2                              break;
 369   2                      case 20:
 370   2                              if(time_left == 0)
 371   2                              {
 372   3                                      left_state = 0;
 373   3                              }
 374   2                              else if (L7 == 1) //if(shutter0.w > SHUTTER_UPPER_TRES)
 375   2                              {        
 376   3                                      click_flag++;
 377   3                                      buffer_clear();
 378   3                                      t_left_data = 0;
 379   3                                      time_left = 0;
 380   3                                      left_state = 0;
 381   3                              }
 382   2                              break;                        
 383   2                      default:
 384   2                              break;
 385   2              }
 386   1      }
 387          
 388          
 389          //------------------------------------------------------------------------------------
 390          // Click action - only function in FINGER_MODE
 391          //------------------------------------------------------------------------------------
 392          
 393          void Click_Action(void)
 394          {
 395   1              switch(click_state)
 396   1              {
 397   2                      case 0:
 398   2                              if((click_flag != 0) && (ofn_mode == FINGER_MODE))      
 399   2                              {
 400   3                                      buttons &= ~LEFT_BUTTON;
 401   3                                      if(ofn_mode == FINGER_MODE)
 402   3                                      {
 403   4                                              buttons |= LEFT_BUTTON;
 404   4                                      }
 405   3                                      t_click_data = CLICK_TIME;
 406   3                                      time_click = 1; 
 407   3                                      click_state = 10;
 408   3                              }
 409   2                              else if(time_click == 1)
 410   2                              {
 411   3                                      buffer_clear();
 412   3                              }
 413   2                              break;
 414   2                      case 10:
 415   2                              if(time_click == 0)
 416   2                              {
 417   3                                      buttons &= ~LEFT_BUTTON;
 418   3                                      click_flag--;
 419   3                                      click_flag = 0;
 420   3                                      if(click_flag != 0)
 421   3                                      {
 422   4                                              click_flag = 1;
 423   4                                      }
 424   3                                      t_click_data = CLICK_TIME;
 425   3                                      time_click = 1;
 426   3                                      click_state = 0;
 427   3                              }
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 8   

 428   2                              else
 429   2                              {
 430   3                                      buffer_clear();
 431   3                              }  
 432   2                              break; 
 433   2                      default:
 434   2                              break;
 435   2              }
 436   1      }
 437          
 438          
 439          //------------------------------------------------------------------------------------
 440          // Right click detection - only function in FINGER_MODE
 441          //------------------------------------------------------------------------------------
 442          
 443          void Right_Detection(void)
 444          {
 445   1              if(count_x | count_y)
 446   1              {
 447   2                      right_state = 0;
 448   2              }
 449   1              if(rc_flag == 1)
 450   1              {
 451   2                      right_state = 50;
 452   2              }
 453   1      
 454   1              switch(right_state)
 455   1              {
 456   2                      case 0:
 457   2                              if(threshold_flag == 1)
 458   2                              {
 459   3                                      right_state = 10; 
 460   3                              }
 461   2                              else
 462   2                              {
 463   3                                      right_state = 10;               
 464   3                              }
 465   2                              break;
 466   2                      case 10:
 467   2                              if (L7 == 0)
 468   2                              //if(shutter0.w < SHUTTER_LOWER_TRES)
 469   2                              { 
 470   3                              //      free_scroll = 0;  
 471   3                                      count_z = 0;    
 472   3                                      t_right_data = 1000;
 473   3                                      time_right = 1;   
 474   3                                      right_state = 20;      
 475   3                              }
 476   2                              break;
 477   2                      case 20:
 478   2                              if(time_right == 0)
 479   2                              {
 480   3                                      right_state = 30;
 481   3                              }
 482   2                              if (L7 == 1)
 483   2                              //if(shutter0.w > SHUTTER_UPPER_TRES)
 484   2                              {        
 485   3                                      time_right = 0;
 486   3                                      right_state = 0;      
 487   3                              }
 488   2                              break;   
 489   2                      case 30:
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 9   

 490   2                              buttons &= ~RIGHT_BUTTON;
 491   2                              if(ofn_mode == FINGER_MODE)
 492   2                              {
 493   3                                      buttons |= RIGHT_BUTTON;
 494   3                              }
 495   2                              t_right_data = 8;
 496   2                              time_right = 1; 
 497   2                              right_state = 40;
 498   2                              break; 
 499   2                      case 40:
 500   2                              if(time_right == 0)
 501   2                              {
 502   3                                      buttons &= ~RIGHT_BUTTON;
 503   3                                      right_state = 0;
 504   3                              }  
 505   2                              break;
 506   2                      case 50:        
 507   2                              if (L7 == 1)
 508   2                              //if(shutter0.w > SHUTTER_UPPER_TRES)
 509   2                              {       
 510   3                                      rc_flag = 0;
 511   3                                      right_state = 0;     
 512   3                              }
 513   2                              break;                             
 514   2                      default:
 515   2                              break;
 516   2              }
 517   1      }
 518          #endif 
 519          
 520          
 521          //------------------------------------------------------------------------------------
 522          // Speed Switching
 523          //------------------------------------------------------------------------------------
 524          
 525          void speed_switching(void)
 526          {
 527   1              shutter0.w = shutter1.w;
 528   1      
 529   1              count_x = count_x0;
 530   1              count_y = count_y0;
 531   1      
 532   1              sign_count_x3=sign_of(count_x3);
 533   1              sign_count_x2=sign_of(count_x2);
 534   1              sign_count_x1=sign_of(count_x1);
 535   1              sign_count_y3=sign_of(count_y3);
 536   1              sign_count_y2=sign_of(count_y2);
 537   1              sign_count_y1=sign_of(count_y1);
 538   1      
 539   1              count_x3 = count_x2;
 540   1              count_y3 = count_y2;
 541   1              count_x2 = count_x1;
 542   1              count_y2 = count_y1;
 543   1              count_x1 = (signed char) delta_x;
 544   1              count_y1 = (signed char) delta_y;
 545   1      
 546   1      }
 547          
 548          
 549          //------------------------------------------------------------------------------------
 550          // Clear CountX and CountY buffer
 551          //------------------------------------------------------------------------------------
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 10  

 552          
 553          void buffer_clear(void)
 554          {
 555   1              count_x = 0;
 556   1      //      count_x0 = 0;
 557   1      //      count_x1 = 0;
 558   1      //      count_x2 = 0;
 559   1      //      count_x3 = 0;
 560   1      //      count_x4 = 0;
 561   1              count_y = 0;
 562   1      //      count_y0 = 0;
 563   1      //      count_y1 = 0;
 564   1      //      count_y2 = 0;
 565   1      //      count_y3 = 0;
 566   1      //      count_y4 = 0;
 567   1      }
 568          
 569          
 570          //------------------------------------------------------------------------------------
 571          // Toggle Step (Swipe Detection)
 572          //------------------------------------------------------------------------------------
 573          
 574          unsigned char toggle_step(int X_Total_Displacement, int Y_Total_Displacement)
 575          {
 576   1              key_step = 0;
 577   1      
 578   1              toggle_flag = 0;
 579   1              if((abs(X_Total_Displacement) + abs(Y_Total_Displacement)) < 20)        
 580   1              {
 581   2                      X_Total_Displacement = 0;
 582   2                      Y_Total_Displacement = 0;
 583   2              }
 584   1              else
 585   1              {
 586   2                      if(eight_way == 1)
 587   2                      {
 588   3                              if(abs(Y_Total_Displacement) > abs(X_Total_Displacement))
 589   3                              {
 590   4                                      if(Y_Total_Displacement > 0)
 591   4                                      {
 592   5                                              key_step = UP_KEY;
 593   5                                              if(X_Total_Displacement > X_right_S_Step_Thresh)
 594   5                                              {       
 595   6                                                      key_step2 = RIGHT_KEY;
 596   6                                              }
 597   5                                              else if (X_Total_Displacement < X_left_S_Step_Thresh)
 598   5                                              {       
 599   6                                                      key_step2 = LEFT_KEY;
 600   6                                              }
 601   5                                              else
 602   5                                              {
 603   6                                                      key_step2 = 0;
 604   6                                              }
 605   5                                      }
 606   4                                      else
 607   4                                      {
 608   5                                              key_step = DOWN_KEY;
 609   5                                              if(X_Total_Displacement > X_right_S_Step_Thresh)
 610   5                                              {       
 611   6                                                      key_step2 = RIGHT_KEY;
 612   6                                              }
 613   5                                              else if (X_Total_Displacement < X_left_S_Step_Thresh)
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 11  

 614   5                                              {       
 615   6                                                      key_step2 = LEFT_KEY;
 616   6                                              }
 617   5                                              else
 618   5                                              {
 619   6                                                      key_step2 = 0;
 620   6                                              }       
 621   5                                      }
 622   4                              }
 623   3                              else
 624   3                              {
 625   4                                      if(X_Total_Displacement > 0)
 626   4                                      {
 627   5                                              key_step = RIGHT_KEY;
 628   5                                              if(Y_Total_Displacement > Y_up_S_Step_Thresh)
 629   5                                              {       
 630   6                                                      key_step2 = UP_KEY;
 631   6                                              }
 632   5                                              else if (Y_Total_Displacement < Y_down_S_Step_Thresh)
 633   5                                              {       
 634   6                                                      key_step2 = DOWN_KEY;
 635   6                                              }
 636   5                                              else
 637   5                                              {
 638   6                                                      key_step2 = 0;
 639   6                                              }       
 640   5                                      }
 641   4                                      else
 642   4                                      {
 643   5                                              key_step = LEFT_KEY;
 644   5                                              if(Y_Total_Displacement > Y_up_S_Step_Thresh)
 645   5                                              {       
 646   6                                                      key_step2 = UP_KEY;
 647   6                                              }
 648   5                                              else if (Y_Total_Displacement < Y_down_S_Step_Thresh)
 649   5                                              {       
 650   6                                                      key_step2 = DOWN_KEY;
 651   6                                              }
 652   5                                              else
 653   5                                              {
 654   6                                                      key_step2 = 0;
 655   6                                              }       
 656   5                                      }
 657   4                              }
 658   3                      }
 659   2      
 660   2                      else if(eight_way == 0)
 661   2                      {
 662   3                              key_step2 = 0;
 663   3                              if(abs(Y_Total_Displacement) > abs(X_Total_Displacement))
 664   3                              {
 665   4                                      if(Y_Total_Displacement > 10)
 666   4                                      {
 667   5                                              key_step = UP_KEY;
 668   5                                              X_Total_Displacement = 0;
 669   5                                              Y_Total_Displacement = 0;
 670   5                                      }
 671   4                                      else if(Y_Total_Displacement < -10)
 672   4                                      {
 673   5                                              key_step = DOWN_KEY;
 674   5                                              X_Total_Displacement = 0;
 675   5                                              Y_Total_Displacement = 0;
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 12  

 676   5                                      }
 677   4                                      else
 678   4                                      {
 679   5                                              key_step = 0;
 680   5                                              key_step2 = 0;
 681   5                                      }
 682   4                              }
 683   3                              else
 684   3                              {
 685   4                                      if(X_Total_Displacement > 12)
 686   4                                      {
 687   5                                              key_step = RIGHT_KEY;
 688   5                                              X_Total_Displacement = 0;
 689   5                                              Y_Total_Displacement = 0;
 690   5                                      }
 691   4                                      else if(X_Total_Displacement < -12)
 692   4                                      {
 693   5                                              key_step = LEFT_KEY;
 694   5                                              X_Total_Displacement = 0;
 695   5                                              Y_Total_Displacement = 0;
 696   5                                      }
 697   4                                      else
 698   4                                      {
 699   5                                              key_step = 0;
 700   5                                              key_step2 = 0;
 701   5                                      }
 702   4                              }
 703   3      
 704   3                      }
 705   2                      
 706   2              }
 707   1      
 708   1              return key_step;
 709   1      }
 710          
 711          
 712          
 713          
 714          unsigned char toggle_step2(int deltaX, int deltaY)
 715          {
 716   1              key_step = 0;
 717   1      
 718   1              if((time_0 == 0) && (toggle_flag == 0))
 719   1              {
 720   2                      toggle_flag = 1;
 721   2      
 722   2                      if (finger_status == 1 )
 723   2                      {
 724   3                              X_Total_Displacement = 0;
 725   3                              Y_Total_Displacement = 0;
 726   3                      } 
 727   2                                                      
 728   2                      key_step = 0;
 729   2                      key_step2 = 0;
 730   2      
 731   2                      t0_data = 30;   
 732   2                      time_0 = 1;
 733   2              }
 734   1      
 735   1              if(toggle_flag == 1)
 736   1              {       
 737   2      
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 13  

 738   2                      if(time_0 == 1)
 739   2                      {
 740   3                              if((X_Total_Displacement < 0) && (deltaX > 0))
 741   3                              {
 742   4                                      X_Total_Displacement = 0;
 743   4                              }
 744   3                              else if((X_Total_Displacement > 0) && (deltaX < 0))
 745   3                              {
 746   4                                      X_Total_Displacement = 0;
 747   4                              }
 748   3      
 749   3                              if((Y_Total_Displacement < 0) && (deltaY > 0))
 750   3                              {
 751   4                                      Y_Total_Displacement = 0;
 752   4                              }
 753   3                              else if((Y_Total_Displacement > 0) && (deltaY < 0))
 754   3                              {
 755   4                                      Y_Total_Displacement = 0;
 756   4                              }
 757   3      
 758   3                              X_Total_Displacement += /*(signed char)*/ deltaX;
 759   3                              Y_Total_Displacement += /*(signed char)*/ deltaY;
 760   3                              if (L7==0)
 761   3                              {
 762   4                                      X_Acceleration_Buffer = X_Total_Displacement;
 763   4                                      Y_Acceleration_Buffer = Y_Total_Displacement;
 764   4                              }
 765   3      
 766   3      
 767   3                              deltaX = deltaY = 0;    
 768   3      
 769   3                      }
 770   2                      else if(time_0 == 0)
 771   2                      {
 772   3                              toggle_flag = 0;
 773   3                              if((abs(X_Total_Displacement) + abs(Y_Total_Displacement)) < step_threshold)    
 774   3                              {
 775   4      
 776   4                                      if (finger_status == 1 )
 777   4                                      {
 778   5                                              X_Total_Displacement = 0;
 779   5                                              Y_Total_Displacement = 0;
 780   5                                      } 
 781   4      
 782   4                              }
 783   3                              else
 784   3                              {
 785   4                                      if(eight_way == 1)
 786   4                                      {
 787   5                                              if(abs(Y_Total_Displacement) > abs(X_Total_Displacement))
 788   5                                              {
 789   6                                                      if(Y_Total_Displacement > 20)
 790   6                                                      {
 791   7                                                              key_step = UP_KEY;
 792   7                                                              if(X_Total_Displacement > X_right_M_Step_Thresh)
 793   7                                                              {       
 794   8                                                                      key_step2 = RIGHT_KEY;
 795   8                                                              }
 796   7                                                              else if (X_Total_Displacement < X_left_M_Step_Thresh)
 797   7                                                              {       
 798   8                                                                      key_step2 = LEFT_KEY;
 799   8                                                              }
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 14  

 800   7                                                              else
 801   7                                                              {
 802   8                                                                      key_step2 = 0;
 803   8                                                              }
 804   7                                                      }
 805   6                                                      else if (Y_Total_Displacement < -20)
 806   6                                                      {
 807   7                                                              key_step = DOWN_KEY;
 808   7                                                              if(X_Total_Displacement > X_right_M_Step_Thresh)
 809   7                                                              {       
 810   8                                                                      key_step2 = RIGHT_KEY;
 811   8                                                              }
 812   7                                                              else if (X_Total_Displacement < X_left_M_Step_Thresh)
 813   7                                                              {       
 814   8                                                                      key_step2 = LEFT_KEY;
 815   8                                                              }
 816   7                                                              else
 817   7                                                              {
 818   8                                                                      key_step2 = 0;
 819   8                                                              }       
 820   7                                                      }
 821   6                                                      else 
 822   6                                                      {
 823   7                                                              key_step = 0;
 824   7                                                              key_step2 = 0;
 825   7                                                      }
 826   6      
 827   6                                              }
 828   5                                              else
 829   5                                              {
 830   6                                                      if(X_Total_Displacement > 20)
 831   6                                                      {
 832   7                                                              key_step = RIGHT_KEY;
 833   7                                                              if(Y_Total_Displacement > Y_up_M_Step_Thresh)
 834   7                                                              {       
 835   8                                                                      key_step2 = UP_KEY;
 836   8                                                              }
 837   7                                                              else if (Y_Total_Displacement < Y_down_M_Step_Thresh)
 838   7                                                              {       
 839   8                                                                      key_step2 = DOWN_KEY;
 840   8                                                              }
 841   7                                                              else
 842   7                                                              {
 843   8                                                                      key_step2 = 0;
 844   8                                                              }       
 845   7                                                      }
 846   6                                                      else if(X_Total_Displacement < -20)
 847   6                                                      {
 848   7                                                              key_step = LEFT_KEY;
 849   7                                                              if(Y_Total_Displacement > Y_up_M_Step_Thresh)
 850   7                                                              {       
 851   8                                                                      key_step2 = UP_KEY;
 852   8                                                              }
 853   7                                                              else if (Y_Total_Displacement < Y_down_M_Step_Thresh)
 854   7                                                              {       
 855   8                                                                      key_step2 = DOWN_KEY;
 856   8                                                              }
 857   7                                                              else
 858   7                                                              {
 859   8                                                                      key_step2 = 0;
 860   8                                                              }       
 861   7                                                      }
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 15  

 862   6                                                      else
 863   6                                                      {
 864   7                                                              key_step = 0;
 865   7                                                              key_step2 = 0;
 866   7                                                      }
 867   6                                              }
 868   5                                      }
 869   4                                      else if(eight_way == 0)
 870   4                                      {
 871   5                                              key_step2 = 0;
 872   5                                              if(abs(Y_Total_Displacement) > abs(X_Total_Displacement))
 873   5                                              {
 874   6                                                      if(Y_Total_Displacement > 10)
 875   6                                                      {
 876   7                                                              key_step = UP_KEY;
 877   7                                                              X_Total_Displacement = 0;
 878   7                                                              Y_Total_Displacement = 0;
 879   7                                                      }
 880   6                                                      else if(Y_Total_Displacement < -10)
 881   6                                                      {
 882   7                                                              key_step = DOWN_KEY;
 883   7                                                              X_Total_Displacement = 0;
 884   7                                                              Y_Total_Displacement = 0;
 885   7                                                      }
 886   6                                                      else
 887   6                                                      {
 888   7                                                              key_step = 0;
 889   7                                                              key_step2 = 0;
 890   7                                                      }
 891   6                                              }
 892   5                                              else
 893   5                                              {
 894   6                                                      if(X_Total_Displacement > 12)
 895   6                                                      {
 896   7                                                              key_step = RIGHT_KEY;
 897   7                                                              X_Total_Displacement = 0;
 898   7                                                              Y_Total_Displacement = 0;
 899   7                                                      }
 900   6                                                      else if(X_Total_Displacement < -12)
 901   6                                                      {
 902   7                                                              key_step = LEFT_KEY;
 903   7                                                              X_Total_Displacement = 0;
 904   7                                                              Y_Total_Displacement = 0;
 905   7                                                      }
 906   6                                                      else
 907   6                                                      {
 908   7                                                              key_step = 0;
 909   7                                                              key_step2 = 0;
 910   7                                                      }
 911   6                                              }
 912   5      
 913   5                                      }
 914   4      
 915   4                                      t0_data = polling_period;
 916   4                                      time_0 = 1;     
 917   4                              }
 918   3                      }
 919   2              }
 920   1      
 921   1              return key_step;
 922   1      }
 923          
C51 COMPILER V7.10   ROCKER                                                                06/02/1987 18:18:26 PAGE 16  

 924          
 925          
 926          
 927          
 928          
 929          signed char sign_of ( signed char input)
 930          {
 931   1              if (input > 0)
 932   1              return 1;
 933   1              if (input < 0)
 934   1              return -1;
 935   1              if (input == 0)
 936   1              return 0;
 937   1      }
 938          
 939          
 940          
 941          
 942          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3774    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     58       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
